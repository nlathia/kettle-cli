// Code generated by go-bindata. (@generated) DO NOT EDIT.

// Package templates generated by go-bindata.// sources:
// templates/gcloud/cloud_function/Makefile
// templates/gcloud/cloud_function/README.md
// templates/gcloud/cloud_function/bin/_config.sh
// templates/gcloud/cloud_function/bin/cleanup.sh
// templates/gcloud/cloud_function/bin/launch.sh
// templates/gcloud/cloud_function/bin/remove_pyenv.sh
// templates/gcloud/cloud_function/bin/setup_pyenv.sh
// templates/gcloud/cloud_function/main.py
// templates/gcloud/cloud_function/model/__init__.py
// templates/gcloud/cloud_function/model/artifacts/README.md
// templates/gcloud/cloud_function/model/artifacts/__init__.py
// templates/gcloud/cloud_function/model/artifacts/files.py
// templates/gcloud/cloud_function/model/model.py
// templates/gcloud/cloud_function/requirements-dev.txt
// templates/gcloud/cloud_function/requirements.txt
// templates/gcloud/cloud_function/tests/__init__.py
// templates/gcloud/cloud_function/tests/model/__init__.py
// templates/gcloud/cloud_function/tests/model/artifacts/__init__.py
// templates/gcloud/cloud_function/tests/model/artifacts/test_files.py
// templates/gcloud/cloud_function/tests/model/test_model.py
// templates/gcloud/cloud_run/.dockerignore
// templates/gcloud/cloud_run/Dockerfile
// templates/gcloud/cloud_run/Makefile
// templates/gcloud/cloud_run/README.md
// templates/gcloud/cloud_run/bin/_config.sh
// templates/gcloud/cloud_run/bin/cleanup.sh
// templates/gcloud/cloud_run/bin/launch.sh
// templates/gcloud/cloud_run/bin/remove_pyenv.sh
// templates/gcloud/cloud_run/bin/setup_pyenv.sh
// templates/gcloud/cloud_run/main.py
// templates/gcloud/cloud_run/model/__init__.py
// templates/gcloud/cloud_run/model/artifacts/README.md
// templates/gcloud/cloud_run/model/artifacts/__init__.py
// templates/gcloud/cloud_run/model/artifacts/files.py
// templates/gcloud/cloud_run/model/model.py
// templates/gcloud/cloud_run/requirements-dev.txt
// templates/gcloud/cloud_run/requirements.txt
// templates/gcloud/cloud_run/tests/__init__.py
// templates/gcloud/cloud_run/tests/model/__init__.py
// templates/gcloud/cloud_run/tests/model/artifacts/__init__.py
// templates/gcloud/cloud_run/tests/model/artifacts/test_files.py
// templates/gcloud/cloud_run/tests/model/test_model.py
// templates/helpers.go
package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGcloudCloud_functionMakefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x4f\x4b\x85\x40\x14\xc5\xd7\xdd\x4f\x71\x17\x0f\xde\x73\xa1\xd2\x56\x08\x72\x21\x14\x94\x45\x94\xd0\x4a\xa6\xf1\xc6\x08\xb7\x71\x70\xfe\x84\xe0\x87\x8f\x31\x1c\xe1\xed\xce\xbd\xe7\x70\xce\xaf\x7b\x7c\x7b\xff\xa8\x9f\x9a\xb6\xeb\xdb\xfa\xb9\xb9\x3b\x5d\xac\x22\x66\x34\xbf\x03\xae\x38\x53\xc0\x15\xa5\x77\x98\x0f\x78\x2e\xcf\x98\x7f\xe3\xed\xff\x3f\xcb\x07\x0a\x00\xc5\xeb\xc3\x4b\xfb\x59\xe1\xa8\xad\x13\xcc\xe8\xf5\xae\x1c\x59\x87\x92\x49\x68\xe4\x49\x0a\x56\x93\x75\x00\xc9\xaf\xe0\xe6\xbe\x28\xbf\x46\x5d\xce\xf4\x33\x05\xea\xcd\x42\x3a\x14\x56\x01\xec\x89\xa3\x2c\x65\x2d\x39\x6f\x52\x14\x4f\x97\x2b\xfe\x0c\x20\xee\xc6\x72\xb3\x44\x05\xb0\x21\x1c\x6b\xdb\xe9\xcd\x36\x94\xb8\x0e\x9b\x85\xd7\x52\x45\xf7\x2f\x00\x00\xff\xff\xd9\x7b\x93\xd0\x1a\x01\x00\x00")

func templatesGcloudCloud_functionMakefileBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionMakefile,
		"templates/gcloud/cloud_function/Makefile",
	)
}

func templatesGcloudCloud_functionMakefile() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionMakefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/Makefile", size: 282, mode: os.FileMode(420), modTime: time.Unix(1602443082, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8a\x31\x0b\xc2\x30\x10\x46\xf7\xfc\x8a\x4f\x5c\x74\x69\x77\x37\xd1\x45\x10\x27\x37\x71\x88\xc9\xd5\x1c\xd8\x5e\xb8\x5c\x28\xa5\xf4\xbf\x8b\x83\xdd\xde\x7b\xbc\x2d\xe6\x19\xcd\x99\x95\x82\x89\x4e\x37\xdf\x13\x96\xc5\xb9\x63\x8c\xf0\x88\x54\x82\x72\x36\x96\x01\xd2\x61\x92\xaa\x08\x1f\xa9\x11\x5d\x1d\xc2\x2f\x6f\x9c\xbb\x27\x2e\xab\x63\xf4\x05\x41\xc9\x1b\x45\x8c\x6c\x09\x96\x08\x0f\xc9\xa4\xde\x44\x71\xba\x5e\x9e\xbb\x64\x96\xcb\xa1\x6d\xdf\x6c\xa9\xbe\x9a\x20\x7d\xfb\x1f\x3c\xaf\xb8\x6f\xdc\x37\x00\x00\xff\xff\xdc\x57\xc0\xe5\x9e\x00\x00\x00")

func templatesGcloudCloud_functionReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionReadmeMd,
		"templates/gcloud/cloud_function/README.md",
	)
}

func templatesGcloudCloud_functionReadmeMd() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/README.md", size: 158, mode: os.FileMode(420), modTime: time.Unix(1602336547, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionBin_configSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xad\x28\xc8\x2f\x2a\x51\x08\x88\x0c\xf1\xf0\xf7\x8b\x0f\x73\x0d\x0a\xf6\xf4\xf7\xb3\x35\xd6\x33\xd7\x33\xe0\x82\xca\x05\xb9\x06\xf8\xc7\x07\xf9\xfb\x87\xd8\xaa\x68\x24\xa7\x28\xa8\x68\xa4\x64\x16\xe5\x25\xe6\xa6\x2a\xa8\x18\x68\xea\xeb\xe9\x29\xa8\xa9\x29\x14\x94\xa7\x68\x72\x01\x02\x00\x00\xff\xff\xd9\x82\x78\x14\x4b\x00\x00\x00")

func templatesGcloudCloud_functionBin_configShBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionBin_configSh,
		"templates/gcloud/cloud_function/bin/_config.sh",
	)
}

func templatesGcloudCloud_functionBin_configSh() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionBin_configShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/bin/_config.sh", size: 75, mode: os.FileMode(493), modTime: time.Unix(1602419858, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionBinCleanupSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcd\x31\x4e\x03\x31\x10\x05\xd0\xde\xa7\xf8\x72\x28\xa0\x88\x0f\x40\x0d\x74\x74\x94\x91\x36\xd6\x78\xbc\x6b\x65\x3d\xb3\x1a\x1b\xc4\x4a\xdb\x52\x73\x01\x2e\xc1\x95\x38\x09\x4a\xa0\x80\x66\xa4\xf9\xfa\x7a\x7f\x87\xc7\x78\xe2\x5c\x66\x06\x69\xad\x51\xd2\x2d\x8e\x35\x9e\x18\x34\x73\x94\x23\xdc\x0e\x4f\x53\x69\x68\x64\x65\xe9\x30\xae\xfa\xc2\x0d\x71\x9e\xa1\x19\x7d\x62\x2c\x2b\x45\x9a\x18\x67\xa4\x21\x9b\xd6\x4b\x4c\xcf\x66\x2c\x1d\xa9\x18\x53\x57\x5b\x9d\x63\x9a\x14\xfe\x20\xf8\x7a\xff\x04\x1e\x8a\xa4\x22\x23\xa2\xa4\x1f\xf6\xfc\xfc\xc3\x42\x08\xde\xb9\x5c\x24\x21\x60\xc3\x68\xbc\x60\x7f\x0f\x7f\x3d\x0c\xbf\xbd\x61\xd8\x0e\x61\x59\xe9\x72\xf5\xea\xc6\x63\xc3\x6b\xb4\xb1\xc1\x2a\xf6\x96\xff\x6e\x7e\xbc\x01\x77\x2a\x1c\xfc\x77\x00\x00\x00\xff\xff\x51\xbf\xac\xf4\xf5\x00\x00\x00")

func templatesGcloudCloud_functionBinCleanupShBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionBinCleanupSh,
		"templates/gcloud/cloud_function/bin/cleanup.sh",
	)
}

func templatesGcloudCloud_functionBinCleanupSh() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionBinCleanupShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/bin/cleanup.sh", size: 245, mode: os.FileMode(484), modTime: time.Unix(1602335380, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionBinLaunchSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\x4f\x6a\xeb\x30\x10\x87\xf7\x3e\xc5\x0f\xe5\x41\xde\xe3\x61\x27\xcb\x60\xe8\xb6\xab\xf4\x0f\x69\x0a\x5d\x68\x11\x21\x8f\x63\x61\x79\x64\xa4\x71\xd3\x10\x72\x85\xf6\x08\x3d\x42\xe9\x95\x7a\x82\x1e\xa1\xc4\x4d\xa1\xcc\x6e\xf8\xbe\x6f\x98\x09\xae\x4c\x4b\xb5\xf3\x04\x1b\xba\xce\x70\x55\x62\xd3\x99\x96\xe0\x83\x35\xbe\x09\x49\x36\xc8\x26\x58\x37\x2e\x21\xd9\xe8\x7a\x81\x37\x03\xdb\x86\x12\xa4\x21\x54\xc1\xb6\x14\x61\x03\x8b\x71\x4c\xf1\xdb\xf3\xfb\x2c\x23\xdb\x04\x28\xcd\xf8\x78\x79\x07\x96\xa3\xe4\x78\xfb\x03\xe0\xef\x90\x08\x56\xa2\xff\x6f\x21\x01\xf4\xe4\xe4\x5f\x51\x14\xea\x97\xf9\xf9\xfa\xfc\x86\x15\xf5\xde\x58\x1a\xaf\xdd\xaf\x96\x30\x5c\xc1\x71\x3f\x08\x1c\x8f\xcb\x3a\x78\x1f\x76\xa7\xf4\xf9\x85\x53\x4e\x28\x49\xa9\xce\x29\xfc\x81\x1d\xa2\x47\xfe\x80\xdb\x9b\xbb\x35\x1a\x91\xbe\x9c\xcd\xe6\xc5\x38\xe5\x62\xbe\x98\x23\xaf\x30\x3d\x68\xd5\xd2\x5e\xab\x12\x5a\x3d\x1a\x3f\x90\x56\xc7\xa9\x66\xcd\x2a\xcb\xea\x81\xad\xb8\xc0\x29\xaf\xa3\xe9\x68\x17\x62\x8b\x3c\x17\x13\xb7\x24\x17\x87\x03\x8a\xcb\x33\x70\x6d\x3a\xc2\xf1\x98\x7d\x05\x00\x00\xff\xff\x6f\xa1\xf7\x54\x5b\x01\x00\x00")

func templatesGcloudCloud_functionBinLaunchShBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionBinLaunchSh,
		"templates/gcloud/cloud_function/bin/launch.sh",
	)
}

func templatesGcloudCloud_functionBinLaunchSh() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionBinLaunchShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/bin/launch.sh", size: 347, mode: os.FileMode(420), modTime: time.Unix(1602439810, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionBinRemove_pyenvSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x31\x4e\xf3\x40\x14\x84\xfb\x3d\xc5\xc8\x71\x91\x48\xbf\xf3\x53\x07\x51\x44\x22\x48\x91\x48\x0a\x04\x69\x42\x14\xad\xec\xb7\xf1\x53\xbc\x6f\xa3\xdd\x67\x43\x0e\x40\xcd\x05\xb8\x04\x57\xe2\x24\x28\x2e\x10\x32\xfd\x7c\xf3\xcd\x8c\xb0\xb2\x47\x72\xdc\x10\xca\xe0\xbd\x95\x6a\x06\x6f\x8f\x84\x56\x58\x92\xda\xa6\x31\x23\x2c\x1d\x2c\xa6\xa7\xb3\xd6\x41\x8a\x8e\x62\xe2\x20\xe8\x19\x7a\xe5\xa4\xe9\x1f\xb4\xe6\x84\x54\x46\x3e\x29\x5e\xb8\x87\x7e\x0a\xa0\x35\xa1\xe3\xa8\xad\x6d\x40\xd2\x71\x0c\xe2\x49\x14\x5a\x5b\x05\x27\x54\xe4\x58\xa8\x02\x0b\x58\x8d\x49\xa4\x28\xc8\x98\x14\xda\x58\x12\xf2\x71\xc5\x51\xac\x27\xe4\x57\x93\xff\xfb\x32\x88\xe3\xc3\x34\xd5\xc6\xb0\xc3\x76\x8b\xc2\x21\x1b\x6c\xcb\xb0\xdb\x5d\x5f\xb4\x62\x00\x60\xb3\x7c\x78\x7c\x9a\xdf\x2f\xd6\x9b\xfd\x7a\xbe\x5a\xdc\xe4\xe3\xd2\xea\xf0\xcf\xa4\x8f\x52\x59\x07\x64\xcf\x82\xaf\xf7\x4f\xe0\x2e\x5c\x06\x44\xf2\xa1\x63\x39\xcc\x90\x0f\x9a\xb2\x9e\x39\x9d\x49\xba\x5f\x77\x0b\xf7\x27\xd8\xe7\xa2\x1f\x3a\xcd\xc0\xf9\xf1\x06\xdc\x06\xa1\x69\x66\x1c\x1b\xf3\x1d\x00\x00\xff\xff\xaf\xab\x24\x42\x9c\x01\x00\x00")

func templatesGcloudCloud_functionBinRemove_pyenvShBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionBinRemove_pyenvSh,
		"templates/gcloud/cloud_function/bin/remove_pyenv.sh",
	)
}

func templatesGcloudCloud_functionBinRemove_pyenvSh() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionBinRemove_pyenvShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/bin/remove_pyenv.sh", size: 412, mode: os.FileMode(493), modTime: time.Unix(1602419855, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionBinSetup_pyenvSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xc1\x6e\x13\x31\x10\xbd\xfb\x2b\x9e\x36\x7b\x48\x90\x36\xa5\xd7\x54\x3d\xa0\x50\x20\x12\x24\x51\x1b\x90\x50\x5b\x45\x66\x77\x76\x77\x14\xef\x78\xb1\xbd\x09\x95\xb8\x72\xe6\x07\xf8\x09\x7e\x89\x2f\x41\x6e\x52\xd8\xe4\x50\x4b\x96\xec\xf1\x9b\x37\x6f\xde\x78\x80\x0f\x7a\x43\x25\x1b\x42\x6e\x9b\x46\x4b\x31\x41\xa3\x37\x04\x16\x1f\xb4\x31\x6a\x80\x55\xcd\x1e\x3e\x77\xdc\x06\xec\xd8\x18\xe4\x8e\x74\x20\x68\xb4\x0f\x24\x5b\x6c\xd9\x85\x4e\x1b\x90\x6c\xd9\x59\x69\x48\x02\xd4\x00\xaf\xa4\x78\x22\x41\xdc\xb6\x44\xa8\x09\x05\xb5\x24\x05\x49\xce\xe4\x51\x50\xc9\x42\x11\x17\xdf\xd4\x00\x8e\xbe\x76\xec\x28\x72\x78\x44\x55\x43\x3f\x1a\x2b\xe5\x29\x20\x23\xa5\xbc\xed\x5c\x4e\x48\x87\x05\x3b\xd1\x0d\x21\x7d\x39\x3a\x5b\xe7\x56\x4a\xae\xc6\xbe\x56\x8a\x4b\xdc\xde\x22\x1d\x1e\x94\x91\xf3\x6c\xc5\xe3\x3b\x2a\x47\x2d\xb2\xf7\x48\x97\x9f\x57\xef\x16\xf3\xf5\xa7\xab\xeb\x9b\xd9\x62\x3e\xc2\xfd\xfd\x45\xac\x2d\x0a\x00\x28\xaf\x2d\x92\x3b\xc1\x9f\x9f\xbf\x81\xd9\x5e\x3d\x4b\x85\xe5\x43\xa8\xad\x9c\x66\x27\x8f\x49\xfb\x5a\x4f\xad\x9e\x40\x54\xc9\x4a\x1d\xd3\x4e\xa3\x7d\x91\x54\x9f\x82\xfb\x16\x4e\x90\x9e\x27\x2a\x32\x1f\x30\xd3\xc5\xfc\xcd\xec\xed\xc7\xeb\xab\xf5\x62\xb9\xba\xb9\x4c\xb2\x8c\x44\x7f\x31\x94\x95\x4e\x37\xb4\xb3\x6e\x83\xe9\xf4\x32\x37\x5a\xaa\x04\x77\x3d\x65\x87\xf9\xc4\xe3\x3e\x1c\x57\x96\x95\xf6\xd1\xca\x13\x05\xff\x11\xe9\xb9\xda\xe7\x1b\x9b\x6b\x13\xaf\xaa\xe5\xf6\x5f\x9f\x59\xd6\xb5\x95\xd3\x05\x21\x46\x3d\x85\xae\x0d\xd6\x1a\x8f\x5d\x4d\x64\x54\x69\x1d\x38\xce\x75\x7c\xd6\x9f\xe9\x8b\xf0\x2d\x5c\xa0\xb0\xcf\xbb\x7d\xf4\x0b\x58\x26\x48\xf9\x60\x75\x5f\x80\x43\xca\xaa\xb0\x42\x7d\x83\x7f\xfd\x00\x5e\x5b\xa1\x71\xa2\xfe\x06\x00\x00\xff\xff\x6a\xc5\x0e\xa5\xdb\x02\x00\x00")

func templatesGcloudCloud_functionBinSetup_pyenvShBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionBinSetup_pyenvSh,
		"templates/gcloud/cloud_function/bin/setup_pyenv.sh",
	)
}

func templatesGcloudCloud_functionBinSetup_pyenvSh() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionBinSetup_pyenvShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/bin/setup_pyenv.sh", size: 731, mode: os.FileMode(493), modTime: time.Unix(1602335843, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionMainPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x52\xcb\x8e\x9b\x40\x10\xbc\xcf\x57\x94\xbc\x17\x90\x56\x90\x5c\x57\x21\x4a\xa4\x68\x95\x53\x36\x42\xdc\xed\x31\xd3\xe0\xb1\x61\x9a\xcc\xc3\x8a\x65\xf9\xdf\x57\x0c\x0f\x61\x0e\x7d\x98\xaa\xae\xea\xae\xa6\xb1\xdc\xa3\xe9\xa4\xbb\x40\xf7\x03\x5b\x8f\xb3\x63\xa3\x9b\x9b\x10\x11\xea\x59\x51\x97\xc5\xba\x10\x06\x4b\x4a\xd7\xfe\x15\x1d\x4b\xb5\x8f\x90\x10\x13\xa3\xd8\xbc\x25\xa9\x10\x8a\x1a\xdc\xef\xc8\xde\x83\xa9\xbd\x66\xf3\x47\xf6\x84\xc7\x23\xb1\xf4\x2f\x90\xf3\xe9\x9b\x00\x80\xdd\x6e\x57\x92\x1b\xd8\x28\x07\xcf\x90\xe6\x86\xdf\x55\xf5\x17\x33\x2b\x8b\xa4\x9f\xb6\x75\x13\x7d\xfc\x66\x08\x49\x1c\x3d\x2b\x17\xbd\xa7\x46\xf0\xf1\x4c\xf5\xdc\x5f\x92\x0f\xd6\x6c\x24\xaa\x13\xc1\x46\x5b\x47\xf0\xf4\xdf\x83\x6d\xf4\x76\xe4\xc1\x0d\xae\xb2\x0b\xe4\xe0\x4f\xd2\xa3\x96\x06\x47\xc2\xa8\x40\x0a\xda\x8c\x53\xae\x42\xe5\x22\x32\xd9\x21\x38\x6d\xda\x15\x3d\xf4\xf2\x42\xfb\xd5\xe8\xdb\xc9\xfb\xe1\x2d\xcf\xa7\xb9\x07\xae\x99\x33\xb6\x6d\xae\xb8\x76\xf9\xd7\xec\x4b\x2e\x07\x9d\xbf\x4c\xe8\x7b\xac\x4f\xfd\xdf\x0f\xd9\x12\x99\xd8\xe4\xb0\x1f\x8f\x86\x62\x4d\xac\xa5\xe9\x29\x49\x23\xeb\x05\x3f\xaa\x8f\x5f\x1f\x90\x4a\xc5\x0d\x97\x7c\xae\xb2\xd3\x4a\x8e\x87\x99\xf7\xbc\x71\x80\x21\x52\xb3\xb6\x0b\x9d\x47\xb1\x1c\x3c\x89\x67\x2d\x62\x7d\x85\x36\x43\xf0\xc5\xd6\x3f\x9d\xbb\xc6\x94\x96\xbf\x28\x99\x44\x52\xf1\x19\x00\x00\xff\xff\xdd\x3a\x61\x7b\x68\x02\x00\x00")

func templatesGcloudCloud_functionMainPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionMainPy,
		"templates/gcloud/cloud_function/main.py",
	)
}

func templatesGcloudCloud_functionMainPy() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionMainPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/main.py", size: 616, mode: os.FileMode(420), modTime: time.Unix(1602437362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionModel__init__Py = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesGcloudCloud_functionModel__init__PyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionModel__init__Py,
		"templates/gcloud/cloud_function/model/__init__.py",
	)
}

func templatesGcloudCloud_functionModel__init__Py() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionModel__init__PyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/model/__init__.py", size: 0, mode: os.FileMode(420), modTime: time.Unix(1602336868, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionModelArtifactsReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xc9\xd1\x09\x84\x30\x0c\x06\xe0\xf7\x4e\xf1\xc3\xbd\xdc\xc1\xd1\x1d\x1c\xc0\x21\x4a\x93\x6a\xb0\x1a\x49\xa2\xd0\xed\x05\x9f\xbf\x0f\x66\x25\xee\x28\x16\xd2\x4a\x0d\x4f\x69\x22\xc2\xd0\xcb\xe0\xe5\x66\xc2\xfe\xba\x1c\xa1\x88\x55\x1c\x24\xc6\x35\xd4\x06\xbe\x9c\x97\xfc\xc7\x29\x75\xeb\x8c\x26\x9d\xfd\x97\xd3\x13\x00\x00\xff\xff\x09\x94\x0f\x8e\x52\x00\x00\x00")

func templatesGcloudCloud_functionModelArtifactsReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionModelArtifactsReadmeMd,
		"templates/gcloud/cloud_function/model/artifacts/README.md",
	)
}

func templatesGcloudCloud_functionModelArtifactsReadmeMd() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionModelArtifactsReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/model/artifacts/README.md", size: 82, mode: os.FileMode(420), modTime: time.Unix(1602336830, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionModelArtifacts__init__Py = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesGcloudCloud_functionModelArtifacts__init__PyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionModelArtifacts__init__Py,
		"templates/gcloud/cloud_function/model/artifacts/__init__.py",
	)
}

func templatesGcloudCloud_functionModelArtifacts__init__Py() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionModelArtifacts__init__PyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/model/artifacts/__init__.py", size: 0, mode: os.FileMode(420), modTime: time.Unix(1602336876, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionModelArtifactsFilesPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xc1\x4e\x86\x30\x10\x84\xef\x3c\xc5\x84\x13\x24\xbf\xe5\x4e\xa2\x89\xaf\x60\xbc\x37\x8d\x2c\x50\x2d\x5d\xd2\xee\x7f\xf8\xdf\xde\x6c\x91\xa2\x27\xb9\x6c\x96\xec\x7c\x33\x1d\xbf\xed\x9c\x04\x9c\x9b\xa6\x99\x68\xc6\x42\x62\x77\x27\x6b\x37\xfb\x40\x36\xba\x8d\x46\x64\x49\x3d\x9e\x5e\x74\x8e\x0d\x00\xb4\x6d\xfb\x46\x72\x4f\x31\xc3\x41\xaf\x21\x0c\x07\x95\xc0\x47\xc8\xea\x33\x26\x9f\xe8\x43\x38\x3d\x4c\x91\xbc\xa6\x25\x1f\x62\xfd\x2a\x1c\x9d\xc2\x47\xbc\xaf\x84\xb2\xf3\xfc\x07\x44\xc8\xfa\xb7\xc2\xe0\x72\x85\x14\x9b\xfd\x21\x2b\xc7\x43\xd1\x91\x59\xcc\x0d\xed\xc6\x13\x05\xb3\x7f\x85\xb6\x3f\xcc\x7f\xc2\x5e\xfe\x6a\x37\xdf\x43\xf8\x37\x7c\x55\x9c\xec\x41\x15\x83\xf0\xf0\xcb\xe4\xec\xa4\xcc\x2b\xea\x33\x38\x1b\x3d\x37\x93\x4f\xfa\xb8\xee\xdc\x13\xb9\x50\x4a\xb6\xb6\x34\x61\xfb\x83\x91\x4a\xce\x2a\xfb\x64\x1f\xbb\xca\xbb\x5d\xad\xf5\xdf\x01\x00\x00\xff\xff\x7e\xe2\x05\x91\xb6\x01\x00\x00")

func templatesGcloudCloud_functionModelArtifactsFilesPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionModelArtifactsFilesPy,
		"templates/gcloud/cloud_function/model/artifacts/files.py",
	)
}

func templatesGcloudCloud_functionModelArtifactsFilesPy() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionModelArtifactsFilesPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/model/artifacts/files.py", size: 438, mode: os.FileMode(420), modTime: time.Unix(1602418675, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionModelModelPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x50\xcd\x4a\xc3\x40\x10\xbe\xe7\x29\x3e\xd7\x4b\x0b\xda\x07\xc8\x41\x2c\x78\xb6\x20\xbd\xcb\x92\x9d\x74\x17\xb7\x3b\x65\x32\xa1\x04\xf1\xdd\x65\x27\xd1\xa6\x39\x85\x9d\xef\x3f\x50\x8f\xcc\x3e\x7c\x9e\x39\x50\xde\x6c\xdb\x06\x00\x1e\xf1\x7a\x3c\xbc\x1d\xec\x02\x5f\x02\x84\x74\x94\x82\x89\x47\x81\x21\x11\x49\xc8\xb0\xcb\xe9\x9d\x0b\x35\x4d\x53\xf5\x2e\x42\x21\x75\xba\x31\xe0\x13\x52\xb9\x8c\xda\xa2\x3e\x6d\xf1\xfc\x62\x3f\xb3\x8d\x73\xee\x18\xd3\x80\x34\x40\x23\xfd\xf3\xb6\xe8\xc7\xd2\x69\xe2\x82\x9e\x65\x31\xf5\x5d\x4c\x85\x90\xc9\x4b\x49\xe5\x34\xa7\xd8\x99\xcc\x5e\x4e\xc3\x2c\x58\x3f\xb3\xc3\xc6\xec\x5a\xec\xcd\x2e\x71\xf1\x32\xa1\xe3\xa2\x3e\x19\xbd\xfa\xcd\x45\x0c\x3f\xcc\x4a\x1f\xd6\x65\x25\x76\x47\xbf\x26\x8d\xeb\x09\x96\xbc\x35\x67\xdd\xc8\x97\x09\xac\x91\x04\xc1\xab\xaf\x40\x5c\x79\xcc\x01\x39\x7d\x11\x94\x97\xa5\x76\x7f\xd5\xef\x96\xbe\x75\xaf\x52\x3d\xcb\xd9\xab\x85\x14\x1a\xc6\xac\x48\x45\x19\x7e\x95\x66\xbd\xfd\xb7\xbb\x45\x71\x2d\x5c\xa4\x9c\x19\x57\x96\x1c\x1e\xdc\x4f\xf3\x1b\x00\x00\xff\xff\x7b\x7e\xf8\x44\xe4\x01\x00\x00")

func templatesGcloudCloud_functionModelModelPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionModelModelPy,
		"templates/gcloud/cloud_function/model/model.py",
	)
}

func templatesGcloudCloud_functionModelModelPy() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionModelModelPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/model/model.py", size: 484, mode: os.FileMode(420), modTime: time.Unix(1602418777, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionRequirementsDevTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2b\xcd\x4b\x2e\xc9\xcc\xcf\x2b\xd6\x4d\x2b\x4a\xcc\x4d\x2d\xcf\x2f\xca\xb6\xb5\x35\xd2\x33\xd0\x33\xe0\x2a\xa8\x2c\x49\x2d\x2e\xb1\xb5\x35\xd3\x33\xd4\x33\xe4\x02\x04\x00\x00\xff\xff\x22\x44\xc8\x37\x29\x00\x00\x00")

func templatesGcloudCloud_functionRequirementsDevTxtBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionRequirementsDevTxt,
		"templates/gcloud/cloud_function/requirements-dev.txt",
	)
}

func templatesGcloudCloud_functionRequirementsDevTxt() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionRequirementsDevTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/requirements-dev.txt", size: 41, mode: os.FileMode(420), modTime: time.Unix(1602418377, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionRequirementsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xcb\x49\x2c\xce\xb6\xb5\x35\xd4\x33\xd0\x33\xe2\x02\x04\x00\x00\xff\xff\x10\xa8\xa0\xc4\x0d\x00\x00\x00")

func templatesGcloudCloud_functionRequirementsTxtBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionRequirementsTxt,
		"templates/gcloud/cloud_function/requirements.txt",
	)
}

func templatesGcloudCloud_functionRequirementsTxt() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionRequirementsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/requirements.txt", size: 13, mode: os.FileMode(420), modTime: time.Unix(1602012713, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionTests__init__Py = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesGcloudCloud_functionTests__init__PyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionTests__init__Py,
		"templates/gcloud/cloud_function/tests/__init__.py",
	)
}

func templatesGcloudCloud_functionTests__init__Py() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionTests__init__PyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/tests/__init__.py", size: 0, mode: os.FileMode(420), modTime: time.Unix(1602418521, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionTestsModel__init__Py = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesGcloudCloud_functionTestsModel__init__PyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionTestsModel__init__Py,
		"templates/gcloud/cloud_function/tests/model/__init__.py",
	)
}

func templatesGcloudCloud_functionTestsModel__init__Py() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionTestsModel__init__PyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/tests/model/__init__.py", size: 0, mode: os.FileMode(420), modTime: time.Unix(1602418537, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionTestsModelArtifacts__init__Py = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesGcloudCloud_functionTestsModelArtifacts__init__PyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionTestsModelArtifacts__init__Py,
		"templates/gcloud/cloud_function/tests/model/artifacts/__init__.py",
	)
}

func templatesGcloudCloud_functionTestsModelArtifacts__init__Py() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionTestsModelArtifacts__init__PyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/tests/model/artifacts/__init__.py", size: 0, mode: os.FileMode(420), modTime: time.Unix(1602418543, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionTestsModelArtifactsTest_filesPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8f\x41\x6e\xc5\x20\x0c\x44\xf7\x9c\x62\xf4\xbb\xf9\xd9\x70\x80\x4a\x3d\xcb\x17\x0d\x26\xb1\x44\x62\x84\x5d\xb5\xdc\xbe\x8a\x13\xfd\xec\x86\x19\x78\x33\xf0\xd6\xa4\x1b\x44\x43\x28\x5d\x36\x6c\x92\xa9\xc6\xd4\x8d\x4b\x9a\x4d\x71\xe5\x85\x2b\x69\x08\x21\x53\x81\x91\xda\x6b\x21\x7b\xb5\x64\xeb\x73\xfa\x0c\x00\xf0\x81\xdb\x41\x27\xfb\xe9\xbb\xc2\x56\xc2\x61\x41\x0a\x92\x33\xc0\xbb\xbb\x77\x41\xe6\x4e\xb3\x49\x1f\x17\xe6\x97\xbc\x00\xb6\xb2\xe2\x7b\xa0\x4a\xca\xbc\x2f\x37\xcb\xc4\x75\x6c\xe3\x22\x9a\x52\x2d\xfe\xda\xf3\xaf\x73\x6c\x7c\xef\x79\x9c\xe7\x36\x1e\x93\xdf\x4a\xaa\xe4\x5f\x8e\x47\x1c\xe9\x8f\xd5\xf4\x79\xe8\xe9\x3f\x00\x00\xff\xff\xdd\x33\x63\xee\x0e\x01\x00\x00")

func templatesGcloudCloud_functionTestsModelArtifactsTest_filesPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionTestsModelArtifactsTest_filesPy,
		"templates/gcloud/cloud_function/tests/model/artifacts/test_files.py",
	)
}

func templatesGcloudCloud_functionTestsModelArtifactsTest_filesPy() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionTestsModelArtifactsTest_filesPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/tests/model/artifacts/test_files.py", size: 270, mode: os.FileMode(420), modTime: time.Unix(1602418708, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_functionTestsModelTest_modelPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xcd\x6a\xe3\x40\x10\x84\xef\xf3\x14\xb5\xda\x8b\x04\x83\x1f\xc0\x60\xf0\x61\xf1\x71\x0d\x66\x6f\x4b\x30\x83\xa6\x15\x0f\x9e\x3f\x7a\x5a\xc4\x89\xf1\xbb\x07\x8f\xa5\xc8\x21\x3a\x08\xa6\xbb\xbe\x2a\xba\x5c\xc8\x89\x05\xf9\x5d\xa8\x88\x1a\x38\x05\x84\x64\xc9\x63\x5a\xd4\x87\x52\x6a\xfb\x50\xac\x06\x77\x91\x91\x49\x59\x1a\x70\x1f\x1c\xab\xa0\xed\xd6\x0a\x00\x98\x64\xe4\xf8\x80\x56\x3e\x19\x3b\xaf\x95\x5a\x88\xa7\xf9\xe2\x30\x19\xfc\xc6\xf6\xdf\xfe\xcf\x1e\x63\xb6\x46\x08\x72\x72\xa5\x42\x90\x84\xfe\x44\xfd\x79\x52\xed\x12\x83\x2e\x26\x64\x4f\x1a\xa6\x14\x62\x81\x2b\x2e\x16\x31\xb1\xa7\xb6\xf7\x83\xc6\xc1\x44\x9b\xc2\x2e\x31\x15\x39\xd0\x2b\x53\x29\x89\xbb\x6a\x30\x11\x4b\x3c\x5c\xc1\xdf\x14\xe9\xe9\xd2\x60\xf8\xbc\xca\x86\x4d\x20\x61\xf7\x41\x6d\x25\x1b\x17\xf3\x28\x47\xeb\x7a\xd1\x74\xc9\xd4\x0b\xd9\x46\xd7\xd5\xff\xfa\xbf\x7f\xed\xf5\xa6\x71\x6d\x32\xd3\x5d\xe7\x52\x6c\xd6\x68\x4e\xe4\x7d\xc2\x5b\x62\x6f\x7f\x35\xb7\xee\xc1\xbc\x68\xd5\x2d\xcd\x4c\x40\xfb\x94\x81\x39\x44\xe3\x47\x59\x4c\x65\xf4\x82\xcd\xd4\xf7\x4c\x2f\x3a\x8d\xc5\xe9\xdb\xe1\x33\xb9\xf9\xb2\xff\x0c\x00\x00\xff\xff\x59\x5f\xc0\x4e\x08\x02\x00\x00")

func templatesGcloudCloud_functionTestsModelTest_modelPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_functionTestsModelTest_modelPy,
		"templates/gcloud/cloud_function/tests/model/test_model.py",
	)
}

func templatesGcloudCloud_functionTestsModelTest_modelPy() (*asset, error) {
	bytes, err := templatesGcloudCloud_functionTestsModelTest_modelPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_function/tests/model/test_model.py", size: 520, mode: os.FileMode(420), modTime: time.Unix(1602419722, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runDockerignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xc9\x4f\xce\x4e\x2d\x4a\xcb\xcc\x49\xe5\x0a\x72\x75\x74\xf1\x75\xd5\xcb\x4d\xe1\xd2\xd2\x2b\xa8\x4c\x06\x93\xf9\x60\x32\x85\x2b\x3e\xbe\xa0\x32\x39\x31\x39\x23\x35\x3e\x9e\x4b\xaf\xa0\xb2\x24\xb5\xb8\x24\x1e\xcc\xe7\x02\x31\x8b\xf5\xb9\x00\x01\x00\x00\xff\xff\xbc\x1a\xb3\x49\x48\x00\x00\x00")

func templatesGcloudCloud_runDockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runDockerignore,
		"templates/gcloud/cloud_run/.dockerignore",
	)
}

func templatesGcloudCloud_runDockerignore() (*asset, error) {
	bytes, err := templatesGcloudCloud_runDockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/.dockerignore", size: 72, mode: os.FileMode(420), modTime: time.Unix(1602433120, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x91\x41\x6f\xdb\x30\x0c\x85\xef\xfe\x15\x0f\x48\x8f\xb5\xbd\x61\x87\x15\xb9\x75\x69\x82\x16\x45\x62\xc3\x48\x36\xf4\x54\xd0\x32\x13\x13\x91\x25\x4d\x92\x93\xe5\xdf\x0f\x4a\xdc\x6e\x17\x81\x10\xf8\x3e\x3e\x3e\xce\xb0\x0b\x8c\xd8\x33\xec\x7e\x2f\x4a\x48\x43\xcb\xa1\x8f\x67\x4e\x2f\xea\x4b\xec\xad\x81\x0c\x74\xe0\x22\x9b\xa1\x8f\xd1\x85\x79\x59\xf6\x63\x5b\x74\x56\x1d\xd9\x17\xca\x0e\xe5\x7b\xe9\xae\x8d\xd9\xaa\xa9\xd6\xb8\xd5\xf3\x6f\xc5\xf7\x3c\x68\x19\xb2\x6c\x86\x47\xad\xed\x19\x21\x52\xe4\x81\x4d\x0c\x20\xd3\x41\xdb\x03\x06\x0e\x81\x0e\x1c\x10\x2d\x64\x18\xb8\x13\x8a\xac\x2f\x20\xe7\x98\x3c\xc4\x5c\xbd\xbd\x1a\x8a\x72\xe2\xa4\x08\xd9\x72\xf3\x13\xf5\xdb\xf6\xb9\xda\xec\x36\x3f\x76\xab\xd5\xb2\x59\x3e\x61\xeb\x47\x4e\x83\x16\xd6\x5d\xa0\xad\x22\x0d\x65\x3b\x4e\xd8\x04\x50\xd6\x44\x12\xc3\xfe\x63\x95\x04\x79\xac\xeb\xf7\xe7\x6a\xbd\x44\x49\xce\x65\xbf\xaa\xe6\xf5\xe9\xa5\xc1\xdd\xc7\x77\xb6\xa8\xea\x37\x14\x28\xca\x04\x7e\x31\x21\x92\xd6\x70\xde\x76\xa3\x8a\x62\x0d\x3a\x76\x6c\x3a\x36\x4a\x38\x14\x59\xb3\xdb\xc0\x89\x83\x4c\x8d\x2b\x4d\xe1\x88\xc3\x68\x44\x59\x6f\x12\xa2\x19\x6f\xdb\x9c\xb9\x45\x60\x7f\x12\xc5\xb0\xe6\x3f\x6f\x21\x92\x8f\xa3\x2b\xf0\xcc\x3e\xb5\x61\x9c\x6e\xf3\x49\x99\x25\x71\xd2\xb2\xbf\xc7\x59\x62\x0f\x6b\x18\x67\xeb\x8f\xec\x93\x35\xc5\xe1\x96\xed\x03\x62\xef\x99\xba\x90\xae\xb6\xb2\x1e\x6c\x4e\xe2\xad\xb9\xa5\x7f\x55\x0e\xa3\x8e\xe2\x34\x63\x51\xef\xa0\xac\xe7\x70\x0f\x31\xca\x33\x4d\x53\xcd\x38\xb4\xec\x61\xf7\xd3\x80\x90\xcd\x52\x9e\x2d\x83\x7f\x8f\xa4\xff\x65\xeb\x39\x80\x4e\x24\x9a\x5a\xcd\x45\xb6\x58\x3f\x81\xff\xb0\xfa\xb4\x8d\x3c\x6f\xc5\x74\x98\xdf\xd5\x55\xb3\x45\x9e\x4f\x3c\x7c\x45\x9e\x4f\x3e\xf1\x90\x6a\x19\xd8\x8e\x11\x5f\x30\x90\x98\x39\x39\xf7\x37\x00\x00\xff\xff\xab\x54\xda\x06\xa0\x02\x00\x00")

func templatesGcloudCloud_runDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runDockerfile,
		"templates/gcloud/cloud_run/Dockerfile",
	)
}

func templatesGcloudCloud_runDockerfile() (*asset, error) {
	bytes, err := templatesGcloudCloud_runDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/Dockerfile", size: 672, mode: os.FileMode(420), modTime: time.Unix(1602433085, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runMakefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\xd1\x6b\xc2\x30\x10\xc6\x9f\xbd\xbf\xe2\x1e\x04\xf5\xa1\x29\x7b\x2d\x08\x13\x74\x5b\x41\x3b\x91\x29\xec\xa9\xc4\xf4\x5c\xb3\xc5\xa4\xb4\x49\x87\x68\xff\xf7\xd1\x56\x53\xd8\x5b\xee\xf2\xdd\x7d\xbf\xfb\x0e\xf1\xee\x63\xbf\x58\xaf\x92\x43\x9a\x2c\x36\xab\xf9\x78\x5a\xe5\xa4\x14\x16\xbf\x19\xde\xb0\xa4\x1a\x6f\x28\x9c\xc5\x20\xc3\x49\x38\xc1\xe0\x84\x4f\x7d\x7f\x16\x64\x54\x43\xbc\x59\xbc\xae\xd2\xfd\x6e\x3d\xff\x12\x25\x93\x26\xbc\x5e\x91\x6d\x4b\xf3\x4d\xc2\xc6\x4b\x6c\x9a\xae\xf1\xe2\xb4\xb0\xd2\xe8\x84\x9f\x09\x9b\x26\x52\xdc\x52\x65\x01\xd8\xf6\xed\x3d\xf9\x8c\x50\xea\xca\x72\xa5\xd0\xe9\xc7\xab\xfd\x47\xa1\x88\x6b\xcc\x8c\xf8\xa1\x12\x95\x11\x5c\xe5\xa6\x1d\xf3\xb2\x08\x46\xcf\x2c\x3c\x4a\x1d\x96\x74\x36\x35\xa5\xc5\x85\x74\xcd\xaa\x1c\xe0\xa1\x18\x76\x7a\x6d\x45\xd6\x15\x5e\x8a\xe3\xe9\xbf\x0c\x66\x00\xad\x7d\xbb\xbc\xb8\xf4\xa0\x1d\xc9\xe0\xd6\x95\xae\xe8\x8c\x7a\xbc\x08\x46\x77\xce\xa3\x93\x2a\x6b\x73\x5a\x76\xf5\x49\x2a\xc2\xc0\xe2\x78\xea\xa3\x9a\x21\x03\xf0\xe7\x44\xf7\x03\xfd\x72\xc5\x9d\x16\x79\x4f\x36\xcc\xc0\x5f\x00\x00\x00\xff\xff\xe8\x53\x4f\xa8\xa9\x01\x00\x00")

func templatesGcloudCloud_runMakefileBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runMakefile,
		"templates/gcloud/cloud_run/Makefile",
	)
}

func templatesGcloudCloud_runMakefile() (*asset, error) {
	bytes, err := templatesGcloudCloud_runMakefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/Makefile", size: 425, mode: os.FileMode(420), modTime: time.Unix(1602441072, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xca\xb1\x8a\xc2\x40\x10\x06\xe0\x7e\x9f\xe2\x3f\xae\xb9\x6b\x92\xfe\xba\x43\x1b\x41\xac\xec\xc4\x62\x9d\x9d\xb8\x03\x66\x27\xcc\xce\x12\x42\xc8\xbb\x0b\x82\x76\x5f\xf1\x7d\x63\x5d\xd1\xed\xc5\x98\x5c\x6d\x39\xc5\x91\xb1\x6d\x21\xfc\xa7\x84\x88\xc4\x95\x4c\x26\x17\x2d\xd0\x01\x8b\x36\x03\x3d\xb4\x25\x58\x2b\x20\x2d\x1e\xa5\xb0\x7d\x85\x70\xce\x52\x31\xb4\x42\xaf\x3b\xc7\x0a\x32\x8e\xce\x09\xb3\x78\x86\x67\xc6\x45\x27\xb6\xe8\x6a\xd8\x1d\x0f\xd7\x9f\xec\x3e\xd5\xbf\xbe\xbf\x8b\xe7\x76\xeb\x48\xc7\xfe\x1d\xa2\x7c\xf8\xdb\x85\x67\x00\x00\x00\xff\xff\x97\xe6\x28\x81\xa3\x00\x00\x00")

func templatesGcloudCloud_runReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runReadmeMd,
		"templates/gcloud/cloud_run/README.md",
	)
}

func templatesGcloudCloud_runReadmeMd() (*asset, error) {
	bytes, err := templatesGcloudCloud_runReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/README.md", size: 163, mode: os.FileMode(420), modTime: time.Unix(1602336576, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runBin_configSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xad\x28\xc8\x2f\x2a\x51\x08\x88\x0c\xf1\xf0\xf7\x8b\x0f\x73\x0d\x0a\xf6\xf4\xf7\xb3\x35\xd6\x33\xd7\x33\xe0\x82\xca\x05\xb9\x06\xf8\xc7\x07\xf9\xfb\x87\xd8\xaa\x68\x24\xa7\x28\xa8\x68\xa4\x64\x16\xe5\x25\xe6\xa6\x2a\xa8\x18\x68\xea\xeb\xe9\x29\xa8\xa9\x29\x14\x94\xa7\x68\x72\x01\x02\x00\x00\xff\xff\xd9\x82\x78\x14\x4b\x00\x00\x00")

func templatesGcloudCloud_runBin_configShBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runBin_configSh,
		"templates/gcloud/cloud_run/bin/_config.sh",
	)
}

func templatesGcloudCloud_runBin_configSh() (*asset, error) {
	bytes, err := templatesGcloudCloud_runBin_configShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/bin/_config.sh", size: 75, mode: os.FileMode(493), modTime: time.Unix(1602423946, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runBinCleanupSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcd\x31\x4e\x03\x31\x10\x05\xd0\xde\xa7\xf8\x72\x28\xa0\x88\x0f\x40\x0d\x74\x74\x94\x91\x36\xd6\x78\xbc\x6b\x65\x3d\xb3\x1a\x1b\xc4\x4a\xdb\x52\x73\x01\x2e\xc1\x95\x38\x09\x4a\xa0\x80\x66\xa4\xf9\xfa\x7a\x7f\x87\xc7\x78\xe2\x5c\x66\x06\x69\xad\x51\xd2\x2d\x8e\x35\x9e\x18\x34\x73\x94\x23\xdc\x0e\x4f\x53\x69\x68\x64\x65\xe9\x30\xae\xfa\xc2\x0d\x71\x9e\xa1\x19\x7d\x62\x2c\x2b\x45\x9a\x18\x67\xa4\x21\x9b\xd6\x4b\x4c\xcf\x66\x2c\x1d\xa9\x18\x53\x57\x5b\x9d\x63\x9a\x14\xfe\x20\xf8\x7a\xff\x04\x1e\x8a\xa4\x22\x23\xa2\xa4\x1f\xf6\xfc\xfc\xc3\x42\x08\xde\xb9\x5c\x24\x21\x60\xc3\x68\xbc\x60\x7f\x0f\x7f\x3d\x0c\xbf\xbd\x61\xd8\x0e\x61\x59\xe9\x72\xf5\xea\xc6\x63\xc3\x6b\xb4\xb1\xc1\x2a\xf6\x96\xff\x6e\x7e\xbc\x01\x77\x2a\x1c\xfc\x77\x00\x00\x00\xff\xff\x51\xbf\xac\xf4\xf5\x00\x00\x00")

func templatesGcloudCloud_runBinCleanupShBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runBinCleanupSh,
		"templates/gcloud/cloud_run/bin/cleanup.sh",
	)
}

func templatesGcloudCloud_runBinCleanupSh() (*asset, error) {
	bytes, err := templatesGcloudCloud_runBinCleanupShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/bin/cleanup.sh", size: 245, mode: os.FileMode(484), modTime: time.Unix(1602423946, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runBinLaunchSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xce\x4f\x4a\x03\x31\x14\xc7\xf1\x7d\x4e\xf1\x23\x2d\xad\x22\xf3\xc7\x5d\x3b\xe0\xd2\x9d\xd2\xa2\xb3\x70\x91\x45\x43\xe6\xd5\x84\xc9\x24\xc3\x24\x91\x96\xd2\x2b\xe8\x11\x3c\x82\x78\x25\x4f\xe0\x11\xa4\xd5\x16\x97\x0f\x3e\xef\xc7\x77\x84\x7b\xd9\xd2\xda\x58\x82\xf2\x5d\x27\x5d\x53\x61\xd5\xc9\x96\x60\xbd\x92\x56\xfb\x10\x57\x60\x23\xd4\xda\x04\x04\x35\x98\x3e\xc2\xca\xe4\x94\xa6\x80\xa8\x09\xeb\xe4\x54\x34\xde\xfd\x7a\xbb\x65\x8c\x94\xf6\xe0\xc2\xe1\xeb\xed\x13\xb8\x3b\x62\xe3\x9e\x4f\x00\x17\x29\x10\x54\x1c\xec\x95\x42\xf4\xa0\x8d\x89\x97\x79\x9e\xf3\x7f\x9f\xdf\xef\xaf\x1f\xb8\xdd\xc8\xae\xb7\x84\x48\x21\x9e\xe3\xf8\x1f\xc2\x18\x2a\x0d\x16\xd9\x13\x96\x8b\xc7\x1a\x3a\xc6\xbe\x2a\x8a\x73\x74\x35\x2f\xe7\x65\x81\xac\xc1\x74\x27\x78\x4b\x5b\xc1\x2b\x08\xfe\x22\x6d\x22\xc1\xf7\x53\xe1\x84\xe3\x8c\x2d\x17\x0f\xf5\xcd\xac\x9c\x95\x98\x4c\xd0\x78\xd5\xd2\x80\x21\x39\x64\x3d\x0e\x03\xd5\x78\x77\x10\x7b\x64\x84\x23\x3d\xdd\xe3\x6b\xf6\x13\x00\x00\xff\xff\x70\x87\xca\xf1\x3a\x01\x00\x00")

func templatesGcloudCloud_runBinLaunchShBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runBinLaunchSh,
		"templates/gcloud/cloud_run/bin/launch.sh",
	)
}

func templatesGcloudCloud_runBinLaunchSh() (*asset, error) {
	bytes, err := templatesGcloudCloud_runBinLaunchShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/bin/launch.sh", size: 314, mode: os.FileMode(420), modTime: time.Unix(1602440371, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runBinRemove_pyenvSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x31\x4e\xf3\x40\x14\x84\xfb\x3d\xc5\xc8\x71\x91\x48\xbf\xf3\x53\x07\x51\x44\x22\x48\x91\x48\x0a\x04\x69\x42\x14\xad\xec\xb7\xf1\x53\xbc\x6f\xa3\xdd\x67\x43\x0e\x40\xcd\x05\xb8\x04\x57\xe2\x24\x28\x2e\x10\x32\xfd\x7c\xf3\xcd\x8c\xb0\xb2\x47\x72\xdc\x10\xca\xe0\xbd\x95\x6a\x06\x6f\x8f\x84\x56\x58\x92\xda\xa6\x31\x23\x2c\x1d\x2c\xa6\xa7\xb3\xd6\x41\x8a\x8e\x62\xe2\x20\xe8\x19\x7a\xe5\xa4\xe9\x1f\xb4\xe6\x84\x54\x46\x3e\x29\x5e\xb8\x87\x7e\x0a\xa0\x35\xa1\xe3\xa8\xad\x6d\x40\xd2\x71\x0c\xe2\x49\x14\x5a\x5b\x05\x27\x54\xe4\x58\xa8\x02\x0b\x58\x8d\x49\xa4\x28\xc8\x98\x14\xda\x58\x12\xf2\x71\xc5\x51\xac\x27\xe4\x57\x93\xff\xfb\x32\x88\xe3\xc3\x34\xd5\xc6\xb0\xc3\x76\x8b\xc2\x21\x1b\x6c\xcb\xb0\xdb\x5d\x5f\xb4\x62\x00\x60\xb3\x7c\x78\x7c\x9a\xdf\x2f\xd6\x9b\xfd\x7a\xbe\x5a\xdc\xe4\xe3\xd2\xea\xf0\xcf\xa4\x8f\x52\x59\x07\x64\xcf\x82\xaf\xf7\x4f\xe0\x2e\x5c\x06\x44\xf2\xa1\x63\x39\xcc\x90\x0f\x9a\xb2\x9e\x39\x9d\x49\xba\x5f\x77\x0b\xf7\x27\xd8\xe7\xa2\x1f\x3a\xcd\xc0\xf9\xf1\x06\xdc\x06\xa1\x69\x66\x1c\x1b\xf3\x1d\x00\x00\xff\xff\xaf\xab\x24\x42\x9c\x01\x00\x00")

func templatesGcloudCloud_runBinRemove_pyenvShBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runBinRemove_pyenvSh,
		"templates/gcloud/cloud_run/bin/remove_pyenv.sh",
	)
}

func templatesGcloudCloud_runBinRemove_pyenvSh() (*asset, error) {
	bytes, err := templatesGcloudCloud_runBinRemove_pyenvShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/bin/remove_pyenv.sh", size: 412, mode: os.FileMode(493), modTime: time.Unix(1602423946, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runBinSetup_pyenvSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xc1\x6e\x13\x31\x10\xbd\xfb\x2b\x9e\x36\x7b\x48\x90\x36\xa5\xd7\x54\x3d\xa0\x50\x20\x12\x24\x51\x1b\x90\x50\x5b\x45\x66\x77\x76\x77\x14\xef\x78\xb1\xbd\x09\x95\xb8\x72\xe6\x07\xf8\x09\x7e\x89\x2f\x41\x6e\x52\xd8\xe4\x50\x4b\x96\xec\xf1\x9b\x37\x6f\xde\x78\x80\x0f\x7a\x43\x25\x1b\x42\x6e\x9b\x46\x4b\x31\x41\xa3\x37\x04\x16\x1f\xb4\x31\x6a\x80\x55\xcd\x1e\x3e\x77\xdc\x06\xec\xd8\x18\xe4\x8e\x74\x20\x68\xb4\x0f\x24\x5b\x6c\xd9\x85\x4e\x1b\x90\x6c\xd9\x59\x69\x48\x02\xd4\x00\xaf\xa4\x78\x22\x41\xdc\xb6\x44\xa8\x09\x05\xb5\x24\x05\x49\xce\xe4\x51\x50\xc9\x42\x11\x17\xdf\xd4\x00\x8e\xbe\x76\xec\x28\x72\x78\x44\x55\x43\x3f\x1a\x2b\xe5\x29\x20\x23\xa5\xbc\xed\x5c\x4e\x48\x87\x05\x3b\xd1\x0d\x21\x7d\x39\x3a\x5b\xe7\x56\x4a\xae\xc6\xbe\x56\x8a\x4b\xdc\xde\x22\x1d\x1e\x94\x91\xf3\x6c\xc5\xe3\x3b\x2a\x47\x2d\xb2\xf7\x48\x97\x9f\x57\xef\x16\xf3\xf5\xa7\xab\xeb\x9b\xd9\x62\x3e\xc2\xfd\xfd\x45\xac\x2d\x0a\x00\x28\xaf\x2d\x92\x3b\xc1\x9f\x9f\xbf\x81\xd9\x5e\x3d\x4b\x85\xe5\x43\xa8\xad\x9c\x66\x27\x8f\x49\xfb\x5a\x4f\xad\x9e\x40\x54\xc9\x4a\x1d\xd3\x4e\xa3\x7d\x91\x54\x9f\x82\xfb\x16\x4e\x90\x9e\x27\x2a\x32\x1f\x30\xd3\xc5\xfc\xcd\xec\xed\xc7\xeb\xab\xf5\x62\xb9\xba\xb9\x4c\xb2\x8c\x44\x7f\x31\x94\x95\x4e\x37\xb4\xb3\x6e\x83\xe9\xf4\x32\x37\x5a\xaa\x04\x77\x3d\x65\x87\xf9\xc4\xe3\x3e\x1c\x57\x96\x95\xf6\xd1\xca\x13\x05\xff\x11\xe9\xb9\xda\xe7\x1b\x9b\x6b\x13\xaf\xaa\xe5\xf6\x5f\x9f\x59\xd6\xb5\x95\xd3\x05\x21\x46\x3d\x85\xae\x0d\xd6\x1a\x8f\x5d\x4d\x64\x54\x69\x1d\x38\xce\x75\x7c\xd6\x9f\xe9\x8b\xf0\x2d\x5c\xa0\xb0\xcf\xbb\x7d\xf4\x0b\x58\x26\x48\xf9\x60\x75\x5f\x80\x43\xca\xaa\xb0\x42\x7d\x83\x7f\xfd\x00\x5e\x5b\xa1\x71\xa2\xfe\x06\x00\x00\xff\xff\x6a\xc5\x0e\xa5\xdb\x02\x00\x00")

func templatesGcloudCloud_runBinSetup_pyenvShBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runBinSetup_pyenvSh,
		"templates/gcloud/cloud_run/bin/setup_pyenv.sh",
	)
}

func templatesGcloudCloud_runBinSetup_pyenvSh() (*asset, error) {
	bytes, err := templatesGcloudCloud_runBinSetup_pyenvShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/bin/setup_pyenv.sh", size: 731, mode: os.FileMode(493), modTime: time.Unix(1602423946, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runMainPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x50\x4d\x6b\xe3\x30\x14\xbc\xeb\x57\x0c\xd9\x83\x24\x10\xde\x1c\xc3\x82\x20\x87\x25\xc7\x3a\xb4\xbe\x95\x22\xd4\x48\x4e\xd4\xda\x92\xab\x8f\x40\x08\xf9\xef\xc5\x5f\x10\x0c\x0f\xde\xf3\xcc\x68\x66\x5c\x3f\x84\x98\x11\x12\x21\x6d\x0c\x3d\xda\x4e\xa7\x6f\x2c\xd7\xc3\xb8\x08\x7c\xa5\xe0\x5d\x7b\x13\x88\xf6\xa7\xd8\x94\x17\x68\x1f\x8c\xed\xaa\x69\xae\x84\x21\x5a\xe3\x4e\x59\xa0\x0b\xda\xa8\xe9\x17\x21\x7a\x18\x20\x67\x2d\xa6\x94\xd7\xbd\x55\x8a\x93\x99\x27\x9f\x90\x8c\x13\x42\xf6\x7a\x18\xaa\x18\x4a\xb6\x8c\xfe\xa5\x02\xbd\xcd\x97\x60\x92\x7c\xa7\xc7\xfa\xad\xa1\x1f\x9c\x18\xdb\xe2\x7e\x47\x75\x28\xfe\x94\x5d\xf0\x2f\xba\xb7\x78\x3c\x18\xff\x47\x00\xac\x1e\xd5\x68\x1a\x72\x5d\xab\xb3\x9d\x4f\x8c\x4f\xa8\x3f\xd8\x37\xf5\xff\x1a\xda\x18\x68\x7f\x5b\x61\xb8\xea\xce\x19\x3d\xca\x26\xe4\x8b\xce\xb8\x85\x02\x6f\xad\x59\xb4\x53\xe9\x32\xe4\x9a\x93\x4d\xbe\xe5\x34\x05\x9c\x1f\x4a\x96\xcf\xef\xf3\x85\x95\x4b\xf4\x6b\x8b\x6c\x16\x19\xb3\xba\x16\x6b\x1f\x90\x12\x1b\xa5\x7a\xed\xbc\x52\x9b\x39\xc9\xd4\x44\xf1\xcc\xd8\xcf\x72\x96\x4d\x2c\x56\xe0\x12\x52\x96\x74\x5b\x4d\x1f\x15\x18\x5b\x97\xce\x67\x16\x52\x65\xfd\xd5\xc5\xe0\xc7\xa8\x8c\x1e\xeb\xd7\x86\x0a\xec\xb6\xbb\x2d\xe7\xfc\x37\x00\x00\xff\xff\x2f\x9c\xbd\x55\xe6\x01\x00\x00")

func templatesGcloudCloud_runMainPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runMainPy,
		"templates/gcloud/cloud_run/main.py",
	)
}

func templatesGcloudCloud_runMainPy() (*asset, error) {
	bytes, err := templatesGcloudCloud_runMainPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/main.py", size: 486, mode: os.FileMode(420), modTime: time.Unix(1602441210, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runModel__init__Py = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesGcloudCloud_runModel__init__PyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runModel__init__Py,
		"templates/gcloud/cloud_run/model/__init__.py",
	)
}

func templatesGcloudCloud_runModel__init__Py() (*asset, error) {
	bytes, err := templatesGcloudCloud_runModel__init__PyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/model/__init__.py", size: 0, mode: os.FileMode(420), modTime: time.Unix(1602340494, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runModelArtifactsReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xc9\xd1\x09\x84\x30\x0c\x06\xe0\xf7\x4e\xf1\xc3\xbd\xdc\xc1\xd1\x1d\x1c\xc0\x21\x4a\x93\x6a\xb0\x1a\x49\xa2\xd0\xed\x05\x9f\xbf\x0f\x66\x25\xee\x28\x16\xd2\x4a\x0d\x4f\x69\x22\xc2\xd0\xcb\xe0\xe5\x66\xc2\xfe\xba\x1c\xa1\x88\x55\x1c\x24\xc6\x35\xd4\x06\xbe\x9c\x97\xfc\xc7\x29\x75\xeb\x8c\x26\x9d\xfd\x97\xd3\x13\x00\x00\xff\xff\x09\x94\x0f\x8e\x52\x00\x00\x00")

func templatesGcloudCloud_runModelArtifactsReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runModelArtifactsReadmeMd,
		"templates/gcloud/cloud_run/model/artifacts/README.md",
	)
}

func templatesGcloudCloud_runModelArtifactsReadmeMd() (*asset, error) {
	bytes, err := templatesGcloudCloud_runModelArtifactsReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/model/artifacts/README.md", size: 82, mode: os.FileMode(420), modTime: time.Unix(1602340494, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runModelArtifacts__init__Py = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesGcloudCloud_runModelArtifacts__init__PyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runModelArtifacts__init__Py,
		"templates/gcloud/cloud_run/model/artifacts/__init__.py",
	)
}

func templatesGcloudCloud_runModelArtifacts__init__Py() (*asset, error) {
	bytes, err := templatesGcloudCloud_runModelArtifacts__init__PyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/model/artifacts/__init__.py", size: 0, mode: os.FileMode(420), modTime: time.Unix(1602340494, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runModelArtifactsFilesPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xc1\x4e\x86\x30\x10\x84\xef\x3c\xc5\x84\x13\x24\xbf\xe5\x4e\xa2\x89\xaf\x60\xbc\x37\x8d\x2c\x50\x2d\x5d\xd2\xee\x7f\xf8\xdf\xde\x6c\x91\xa2\x27\xb9\x6c\x96\xec\x7c\x33\x1d\xbf\xed\x9c\x04\x9c\x9b\xa6\x99\x68\xc6\x42\x62\x77\x27\x6b\x37\xfb\x40\x36\xba\x8d\x46\x64\x49\x3d\x9e\x5e\x74\x8e\x0d\x00\xb4\x6d\xfb\x46\x72\x4f\x31\xc3\x41\xaf\x21\x0c\x07\x95\xc0\x47\xc8\xea\x33\x26\x9f\xe8\x43\x38\x3d\x4c\x91\xbc\xa6\x25\x1f\x62\xfd\x2a\x1c\x9d\xc2\x47\xbc\xaf\x84\xb2\xf3\xfc\x07\x44\xc8\xfa\xb7\xc2\xe0\x72\x85\x14\x9b\xfd\x21\x2b\xc7\x43\xd1\x91\x59\xcc\x0d\xed\xc6\x13\x05\xb3\x7f\x85\xb6\x3f\xcc\x7f\xc2\x5e\xfe\x6a\x37\xdf\x43\xf8\x37\x7c\x55\x9c\xec\x41\x15\x83\xf0\xf0\xcb\xe4\xec\xa4\xcc\x2b\xea\x33\x38\x1b\x3d\x37\x93\x4f\xfa\xb8\xee\xdc\x13\xb9\x50\x4a\xb6\xb6\x34\x61\xfb\x83\x91\x4a\xce\x2a\xfb\x64\x1f\xbb\xca\xbb\x5d\xad\xf5\xdf\x01\x00\x00\xff\xff\x7e\xe2\x05\x91\xb6\x01\x00\x00")

func templatesGcloudCloud_runModelArtifactsFilesPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runModelArtifactsFilesPy,
		"templates/gcloud/cloud_run/model/artifacts/files.py",
	)
}

func templatesGcloudCloud_runModelArtifactsFilesPy() (*asset, error) {
	bytes, err := templatesGcloudCloud_runModelArtifactsFilesPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/model/artifacts/files.py", size: 438, mode: os.FileMode(420), modTime: time.Unix(1602340494, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runModelModelPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\xc1\x4a\xc4\x40\x0c\x86\xef\x7d\x8a\xdf\xf1\xb2\x0b\xba\x0f\xd0\x83\xb8\xe0\xd9\x05\xd9\xbb\x0c\x9d\x74\x67\x70\x4c\x96\x74\x4a\x29\xe2\xbb\xcb\xa4\x5d\xad\x3d\x95\x49\xfe\xef\x4b\x12\xa8\x47\x16\x1f\xde\x3f\x25\x50\xde\xed\xdb\x06\x00\x94\xca\xa8\x8c\x57\x61\x02\xee\xf1\x7c\x3e\xbd\x9c\xac\x0d\x9e\xc3\xad\x3a\xcb\xa8\xb0\x18\x22\x29\x35\x4d\x53\x61\x57\xa5\x90\xba\xb2\xb3\xc2\x03\x12\x5f\xc7\xd2\xa2\x3e\xed\xf1\xf8\x64\x3f\x8b\xc3\x39\x77\x8e\x69\x40\x1a\x50\x22\xfd\xe6\xf6\xe8\x47\xee\x4a\x12\x46\x2f\xba\x4a\x7c\x17\x13\x13\x32\x79\xe5\xc4\x97\xc5\x7a\x30\xcc\x51\x2f\xc3\x02\xac\x9f\xe9\xb0\x33\x5d\x8b\xa3\xe9\x92\xb0\xd7\x19\x9d\x70\xf1\xc9\xe2\xd5\xb7\x0c\x6e\xfd\xc3\x42\x7a\xb3\xb5\x36\xb0\x7f\xf1\x29\x95\xb8\x5d\x79\x9d\xb7\xce\x59\x6f\xe2\x79\x86\x94\x48\x8a\xe0\x8b\xaf\x8d\x98\x64\xcc\x01\x39\x7d\x10\x8a\xac\x47\x3b\xdc\x56\xdf\x9e\xf9\xcb\xfd\xc1\x5c\x0b\x17\x29\x67\xc1\x24\x9a\xc3\x9d\xfb\x6e\x7e\x02\x00\x00\xff\xff\xf4\xc0\x21\x96\xa3\x01\x00\x00")

func templatesGcloudCloud_runModelModelPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runModelModelPy,
		"templates/gcloud/cloud_run/model/model.py",
	)
}

func templatesGcloudCloud_runModelModelPy() (*asset, error) {
	bytes, err := templatesGcloudCloud_runModelModelPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/model/model.py", size: 419, mode: os.FileMode(420), modTime: time.Unix(1602340494, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runRequirementsDevTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xa8\x2c\x49\x2d\x2e\xb1\xb5\x35\xd3\x33\xd4\x33\x04\x04\x00\x00\xff\xff\x27\xcc\xce\xf4\x0d\x00\x00\x00")

func templatesGcloudCloud_runRequirementsDevTxtBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runRequirementsDevTxt,
		"templates/gcloud/cloud_run/requirements-dev.txt",
	)
}

func templatesGcloudCloud_runRequirementsDevTxt() (*asset, error) {
	bytes, err := templatesGcloudCloud_runRequirementsDevTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/requirements-dev.txt", size: 13, mode: os.FileMode(420), modTime: time.Unix(1602439823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runRequirementsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesGcloudCloud_runRequirementsTxtBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runRequirementsTxt,
		"templates/gcloud/cloud_run/requirements.txt",
	)
}

func templatesGcloudCloud_runRequirementsTxt() (*asset, error) {
	bytes, err := templatesGcloudCloud_runRequirementsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/requirements.txt", size: 0, mode: os.FileMode(420), modTime: time.Unix(1602012713, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runTests__init__Py = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesGcloudCloud_runTests__init__PyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runTests__init__Py,
		"templates/gcloud/cloud_run/tests/__init__.py",
	)
}

func templatesGcloudCloud_runTests__init__Py() (*asset, error) {
	bytes, err := templatesGcloudCloud_runTests__init__PyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/tests/__init__.py", size: 0, mode: os.FileMode(420), modTime: time.Unix(1602423955, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runTestsModel__init__Py = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesGcloudCloud_runTestsModel__init__PyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runTestsModel__init__Py,
		"templates/gcloud/cloud_run/tests/model/__init__.py",
	)
}

func templatesGcloudCloud_runTestsModel__init__Py() (*asset, error) {
	bytes, err := templatesGcloudCloud_runTestsModel__init__PyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/tests/model/__init__.py", size: 0, mode: os.FileMode(420), modTime: time.Unix(1602423955, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runTestsModelArtifacts__init__Py = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesGcloudCloud_runTestsModelArtifacts__init__PyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runTestsModelArtifacts__init__Py,
		"templates/gcloud/cloud_run/tests/model/artifacts/__init__.py",
	)
}

func templatesGcloudCloud_runTestsModelArtifacts__init__Py() (*asset, error) {
	bytes, err := templatesGcloudCloud_runTestsModelArtifacts__init__PyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/tests/model/artifacts/__init__.py", size: 0, mode: os.FileMode(420), modTime: time.Unix(1602423955, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runTestsModelArtifactsTest_filesPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8f\x41\x6e\xc5\x20\x0c\x44\xf7\x9c\x62\xf4\xbb\xf9\xd9\x70\x80\x4a\x3d\xcb\x17\x0d\x26\xb1\x44\x62\x84\x5d\xb5\xdc\xbe\x8a\x13\xfd\xec\x86\x19\x78\x33\xf0\xd6\xa4\x1b\x44\x43\x28\x5d\x36\x6c\x92\xa9\xc6\xd4\x8d\x4b\x9a\x4d\x71\xe5\x85\x2b\x69\x08\x21\x53\x81\x91\xda\x6b\x21\x7b\xb5\x64\xeb\x73\xfa\x0c\x00\xf0\x81\xdb\x41\x27\xfb\xe9\xbb\xc2\x56\xc2\x61\x41\x0a\x92\x33\xc0\xbb\xbb\x77\x41\xe6\x4e\xb3\x49\x1f\x17\xe6\x97\xbc\x00\xb6\xb2\xe2\x7b\xa0\x4a\xca\xbc\x2f\x37\xcb\xc4\x75\x6c\xe3\x22\x9a\x52\x2d\xfe\xda\xf3\xaf\x73\x6c\x7c\xef\x79\x9c\xe7\x36\x1e\x93\xdf\x4a\xaa\xe4\x5f\x8e\x47\x1c\xe9\x8f\xd5\xf4\x79\xe8\xe9\x3f\x00\x00\xff\xff\xdd\x33\x63\xee\x0e\x01\x00\x00")

func templatesGcloudCloud_runTestsModelArtifactsTest_filesPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runTestsModelArtifactsTest_filesPy,
		"templates/gcloud/cloud_run/tests/model/artifacts/test_files.py",
	)
}

func templatesGcloudCloud_runTestsModelArtifactsTest_filesPy() (*asset, error) {
	bytes, err := templatesGcloudCloud_runTestsModelArtifactsTest_filesPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/tests/model/artifacts/test_files.py", size: 270, mode: os.FileMode(420), modTime: time.Unix(1602423955, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGcloudCloud_runTestsModelTest_modelPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xcd\x6a\xe3\x40\x10\x84\xef\xf3\x14\xb5\xda\x8b\x04\x83\x1f\xc0\x60\xf0\x61\xf1\x71\x0d\x66\x6f\x4b\x30\x83\xa6\x15\x0f\x9e\x3f\x7a\x5a\xc4\x89\xf1\xbb\x07\x8f\xa5\xc8\x21\x3a\x08\xa6\xbb\xbe\x2a\xba\x5c\xc8\x89\x05\xf9\x5d\xa8\x88\x1a\x38\x05\x84\x64\xc9\x63\x5a\xd4\x87\x52\x6a\xfb\x50\xac\x06\x77\x91\x91\x49\x59\x1a\x70\x1f\x1c\xab\xa0\xed\xd6\x0a\x00\x98\x64\xe4\xf8\x80\x56\x3e\x19\x3b\xaf\x95\x5a\x88\xa7\xf9\xe2\x30\x19\xfc\xc6\xf6\xdf\xfe\xcf\x1e\x63\xb6\x46\x08\x72\x72\xa5\x42\x90\x84\xfe\x44\xfd\x79\x52\xed\x12\x83\x2e\x26\x64\x4f\x1a\xa6\x14\x62\x81\x2b\x2e\x16\x31\xb1\xa7\xb6\xf7\x83\xc6\xc1\x44\x9b\xc2\x2e\x31\x15\x39\xd0\x2b\x53\x29\x89\xbb\x6a\x30\x11\x4b\x3c\x5c\xc1\xdf\x14\xe9\xe9\xd2\x60\xf8\xbc\xca\x86\x4d\x20\x61\xf7\x41\x6d\x25\x1b\x17\xf3\x28\x47\xeb\x7a\xd1\x74\xc9\xd4\x0b\xd9\x46\xd7\xd5\xff\xfa\xbf\x7f\xed\xf5\xa6\x71\x6d\x32\xd3\x5d\xe7\x52\x6c\xd6\x68\x4e\xe4\x7d\xc2\x5b\x62\x6f\x7f\x35\xb7\xee\xc1\xbc\x68\xd5\x2d\xcd\x4c\x40\xfb\x94\x81\x39\x44\xe3\x47\x59\x4c\x65\xf4\x82\xcd\xd4\xf7\x4c\x2f\x3a\x8d\xc5\xe9\xdb\xe1\x33\xb9\xf9\xb2\xff\x0c\x00\x00\xff\xff\x59\x5f\xc0\x4e\x08\x02\x00\x00")

func templatesGcloudCloud_runTestsModelTest_modelPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesGcloudCloud_runTestsModelTest_modelPy,
		"templates/gcloud/cloud_run/tests/model/test_model.py",
	)
}

func templatesGcloudCloud_runTestsModelTest_modelPy() (*asset, error) {
	bytes, err := templatesGcloudCloud_runTestsModelTest_modelPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gcloud/cloud_run/tests/model/test_model.py", size: 520, mode: os.FileMode(420), modTime: time.Unix(1602423955, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHelpersGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x41\x4f\xdb\x4e\x10\xc5\xcf\xde\x4f\x31\x7f\x5f\xb0\xa5\x28\xf9\x9f\x41\x5c\x9a\x52\xd4\x56\x42\x08\xb8\x21\x54\x26\xf6\xd8\x5e\x65\xbd\x13\xcd\x8e\x09\x51\xc5\x77\xaf\x76\xed\x98\x40\xd5\x93\x77\x37\x6f\x66\x7e\xef\x4d\x76\x58\x6d\xb1\x25\x50\xea\x77\x0e\x95\x82\x31\xb6\xdf\xb1\x28\x14\x26\xcb\x39\xe4\x26\xcb\x77\xa8\x5d\xfc\x06\x15\xeb\xdb\x90\x1b\x93\xe5\xad\xd5\x6e\xd8\x2c\x2b\xee\x57\x16\x7d\xc5\x8e\x7a\xf4\xab\xa0\x52\x61\xa0\xfc\xa3\x80\x77\x24\xa8\x2c\x68\xe7\xe3\xaa\x62\xdf\xd8\x36\x37\xa5\x31\xab\x15\x3c\x74\x04\xe4\x55\x0e\xd0\x0c\xbe\x52\xcb\xfe\x2c\x40\xec\x04\x7b\xeb\x1c\xbc\xa0\x1c\x60\x83\x81\x6a\x60\x0f\xda\x11\x38\xf4\xed\x80\x2d\x5d\xc4\xea\x3b\xdb\x76\x0a\x9e\xf7\x0b\xd8\xd3\x99\x10\xb0\x77\x07\x08\xc3\x2e\xfa\xb0\xbe\x85\xdb\x83\x76\xec\x21\x30\xec\x09\x86\x40\xf0\xc0\xf7\x1e\xb7\x54\x94\xb1\xfc\xcb\xa0\x0b\x68\x58\x80\x5e\xb1\xdf\x39\x1a\x2f\xd7\x49\x5c\xf1\xe0\xea\xa9\x64\x8d\x3d\xb9\xa2\x34\x11\x11\xd6\x42\xa8\x74\x15\x99\xbf\x4d\xc8\x37\xd8\x53\x81\xd2\x06\x78\x7c\x1a\xa3\x5a\x80\x0c\x5e\x6d\x4f\x30\xde\xcb\xe9\x0b\xbf\x4d\x16\xf6\x56\xab\x2e\x9e\x92\xcf\x29\xdb\xe5\x9a\xbd\xa2\xf5\xa1\x98\x2a\x17\x30\x26\xb5\x1c\x3d\x94\xe7\x26\xcb\x84\x74\x10\x0f\x53\xd8\xcb\xa3\x99\x38\xfa\xf1\xff\xa7\xd2\x64\x35\x35\x38\x38\x8d\xda\xd5\x0a\xd6\x83\x08\x79\x75\x07\x18\xbc\x10\x56\x1d\x6e\xa2\x49\x0c\x29\xc9\xe7\x69\xd0\x33\xc4\xfa\xb1\xc2\x06\xa8\x3a\xaa\xb6\x54\xc3\x86\x1a\x96\x88\x87\x29\xca\xf7\xe9\xd3\x34\x93\xbd\x99\xb7\x79\x87\x95\xe3\xa1\x9e\x77\x08\x1e\x7b\x8a\xcd\x6a\x12\xfb\x42\x35\x34\xc2\x7d\x1a\x5a\x5b\xa1\x4a\x59\x0e\x49\x72\x9a\xe8\xbf\xc3\x3c\x0d\xef\xaf\x04\x7e\xd2\x06\x37\xef\x09\x8c\x44\x77\x49\x15\x00\x21\xfe\x83\x41\x3b\xd4\x48\x23\xe4\x50\xed\x0b\x81\x72\x82\xa9\xc6\x7c\x60\xcf\xb2\x8d\xfd\x67\xb8\x91\xeb\x9a\xf4\x6e\xaa\xf8\x7a\xfc\xa5\x98\x35\x91\x73\xde\x6e\x71\x5c\x3b\x89\xb0\x94\x89\x94\x59\xd3\x1d\xce\x2f\x81\xc3\xf2\x9a\x74\x5f\x17\xa5\xc9\x6c\x93\x5e\xff\xbb\x04\x6f\x5d\x54\x1e\x4d\xe5\x79\xd2\xc7\x60\x8f\x4f\x11\x7f\xf9\x83\xad\x2f\xc6\x76\x1f\xa6\x97\x8b\xd8\x21\x5a\x4e\xb8\xb7\xa8\xdd\xd5\xab\x0d\x1a\x8a\xe4\x7a\x66\xdb\x30\xbb\x53\x32\xdb\xc0\xaf\x53\xb2\x7b\x45\x4d\x25\xe5\xc5\x67\x32\xdb\x44\xc1\xf7\x70\xc3\x9a\x5a\x17\x24\x63\x8f\x19\xba\x41\x17\x68\x04\xc9\x22\xf8\xa7\xf7\x4f\x7e\x54\x06\x3a\x52\xff\x09\x00\x00\xff\xff\x8e\x6b\xcc\x92\x81\x04\x00\x00")

func templatesHelpersGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesHelpersGo,
		"templates/helpers.go",
	)
}

func templatesHelpersGo() (*asset, error) {
	bytes, err := templatesHelpersGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/helpers.go", size: 1153, mode: os.FileMode(420), modTime: time.Unix(1602416948, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/gcloud/cloud_function/Makefile":                            templatesGcloudCloud_functionMakefile,
	"templates/gcloud/cloud_function/README.md":                           templatesGcloudCloud_functionReadmeMd,
	"templates/gcloud/cloud_function/bin/_config.sh":                      templatesGcloudCloud_functionBin_configSh,
	"templates/gcloud/cloud_function/bin/cleanup.sh":                      templatesGcloudCloud_functionBinCleanupSh,
	"templates/gcloud/cloud_function/bin/launch.sh":                       templatesGcloudCloud_functionBinLaunchSh,
	"templates/gcloud/cloud_function/bin/remove_pyenv.sh":                 templatesGcloudCloud_functionBinRemove_pyenvSh,
	"templates/gcloud/cloud_function/bin/setup_pyenv.sh":                  templatesGcloudCloud_functionBinSetup_pyenvSh,
	"templates/gcloud/cloud_function/main.py":                             templatesGcloudCloud_functionMainPy,
	"templates/gcloud/cloud_function/model/__init__.py":                   templatesGcloudCloud_functionModel__init__Py,
	"templates/gcloud/cloud_function/model/artifacts/README.md":           templatesGcloudCloud_functionModelArtifactsReadmeMd,
	"templates/gcloud/cloud_function/model/artifacts/__init__.py":         templatesGcloudCloud_functionModelArtifacts__init__Py,
	"templates/gcloud/cloud_function/model/artifacts/files.py":            templatesGcloudCloud_functionModelArtifactsFilesPy,
	"templates/gcloud/cloud_function/model/model.py":                      templatesGcloudCloud_functionModelModelPy,
	"templates/gcloud/cloud_function/requirements-dev.txt":                templatesGcloudCloud_functionRequirementsDevTxt,
	"templates/gcloud/cloud_function/requirements.txt":                    templatesGcloudCloud_functionRequirementsTxt,
	"templates/gcloud/cloud_function/tests/__init__.py":                   templatesGcloudCloud_functionTests__init__Py,
	"templates/gcloud/cloud_function/tests/model/__init__.py":             templatesGcloudCloud_functionTestsModel__init__Py,
	"templates/gcloud/cloud_function/tests/model/artifacts/__init__.py":   templatesGcloudCloud_functionTestsModelArtifacts__init__Py,
	"templates/gcloud/cloud_function/tests/model/artifacts/test_files.py": templatesGcloudCloud_functionTestsModelArtifactsTest_filesPy,
	"templates/gcloud/cloud_function/tests/model/test_model.py":           templatesGcloudCloud_functionTestsModelTest_modelPy,
	"templates/gcloud/cloud_run/.dockerignore":                            templatesGcloudCloud_runDockerignore,
	"templates/gcloud/cloud_run/Dockerfile":                               templatesGcloudCloud_runDockerfile,
	"templates/gcloud/cloud_run/Makefile":                                 templatesGcloudCloud_runMakefile,
	"templates/gcloud/cloud_run/README.md":                                templatesGcloudCloud_runReadmeMd,
	"templates/gcloud/cloud_run/bin/_config.sh":                           templatesGcloudCloud_runBin_configSh,
	"templates/gcloud/cloud_run/bin/cleanup.sh":                           templatesGcloudCloud_runBinCleanupSh,
	"templates/gcloud/cloud_run/bin/launch.sh":                            templatesGcloudCloud_runBinLaunchSh,
	"templates/gcloud/cloud_run/bin/remove_pyenv.sh":                      templatesGcloudCloud_runBinRemove_pyenvSh,
	"templates/gcloud/cloud_run/bin/setup_pyenv.sh":                       templatesGcloudCloud_runBinSetup_pyenvSh,
	"templates/gcloud/cloud_run/main.py":                                  templatesGcloudCloud_runMainPy,
	"templates/gcloud/cloud_run/model/__init__.py":                        templatesGcloudCloud_runModel__init__Py,
	"templates/gcloud/cloud_run/model/artifacts/README.md":                templatesGcloudCloud_runModelArtifactsReadmeMd,
	"templates/gcloud/cloud_run/model/artifacts/__init__.py":              templatesGcloudCloud_runModelArtifacts__init__Py,
	"templates/gcloud/cloud_run/model/artifacts/files.py":                 templatesGcloudCloud_runModelArtifactsFilesPy,
	"templates/gcloud/cloud_run/model/model.py":                           templatesGcloudCloud_runModelModelPy,
	"templates/gcloud/cloud_run/requirements-dev.txt":                     templatesGcloudCloud_runRequirementsDevTxt,
	"templates/gcloud/cloud_run/requirements.txt":                         templatesGcloudCloud_runRequirementsTxt,
	"templates/gcloud/cloud_run/tests/__init__.py":                        templatesGcloudCloud_runTests__init__Py,
	"templates/gcloud/cloud_run/tests/model/__init__.py":                  templatesGcloudCloud_runTestsModel__init__Py,
	"templates/gcloud/cloud_run/tests/model/artifacts/__init__.py":        templatesGcloudCloud_runTestsModelArtifacts__init__Py,
	"templates/gcloud/cloud_run/tests/model/artifacts/test_files.py":      templatesGcloudCloud_runTestsModelArtifactsTest_filesPy,
	"templates/gcloud/cloud_run/tests/model/test_model.py":                templatesGcloudCloud_runTestsModelTest_modelPy,
	"templates/helpers.go":                                                templatesHelpersGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("nonexistent") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"gcloud": &bintree{nil, map[string]*bintree{
			"cloud_function": &bintree{nil, map[string]*bintree{
				"Makefile":  &bintree{templatesGcloudCloud_functionMakefile, map[string]*bintree{}},
				"README.md": &bintree{templatesGcloudCloud_functionReadmeMd, map[string]*bintree{}},
				"bin": &bintree{nil, map[string]*bintree{
					"_config.sh":      &bintree{templatesGcloudCloud_functionBin_configSh, map[string]*bintree{}},
					"cleanup.sh":      &bintree{templatesGcloudCloud_functionBinCleanupSh, map[string]*bintree{}},
					"launch.sh":       &bintree{templatesGcloudCloud_functionBinLaunchSh, map[string]*bintree{}},
					"remove_pyenv.sh": &bintree{templatesGcloudCloud_functionBinRemove_pyenvSh, map[string]*bintree{}},
					"setup_pyenv.sh":  &bintree{templatesGcloudCloud_functionBinSetup_pyenvSh, map[string]*bintree{}},
				}},
				"main.py": &bintree{templatesGcloudCloud_functionMainPy, map[string]*bintree{}},
				"model": &bintree{nil, map[string]*bintree{
					"__init__.py": &bintree{templatesGcloudCloud_functionModel__init__Py, map[string]*bintree{}},
					"artifacts": &bintree{nil, map[string]*bintree{
						"README.md":   &bintree{templatesGcloudCloud_functionModelArtifactsReadmeMd, map[string]*bintree{}},
						"__init__.py": &bintree{templatesGcloudCloud_functionModelArtifacts__init__Py, map[string]*bintree{}},
						"files.py":    &bintree{templatesGcloudCloud_functionModelArtifactsFilesPy, map[string]*bintree{}},
					}},
					"model.py": &bintree{templatesGcloudCloud_functionModelModelPy, map[string]*bintree{}},
				}},
				"requirements-dev.txt": &bintree{templatesGcloudCloud_functionRequirementsDevTxt, map[string]*bintree{}},
				"requirements.txt":     &bintree{templatesGcloudCloud_functionRequirementsTxt, map[string]*bintree{}},
				"tests": &bintree{nil, map[string]*bintree{
					"__init__.py": &bintree{templatesGcloudCloud_functionTests__init__Py, map[string]*bintree{}},
					"model": &bintree{nil, map[string]*bintree{
						"__init__.py": &bintree{templatesGcloudCloud_functionTestsModel__init__Py, map[string]*bintree{}},
						"artifacts": &bintree{nil, map[string]*bintree{
							"__init__.py":   &bintree{templatesGcloudCloud_functionTestsModelArtifacts__init__Py, map[string]*bintree{}},
							"test_files.py": &bintree{templatesGcloudCloud_functionTestsModelArtifactsTest_filesPy, map[string]*bintree{}},
						}},
						"test_model.py": &bintree{templatesGcloudCloud_functionTestsModelTest_modelPy, map[string]*bintree{}},
					}},
				}},
			}},
			"cloud_run": &bintree{nil, map[string]*bintree{
				".dockerignore": &bintree{templatesGcloudCloud_runDockerignore, map[string]*bintree{}},
				"Dockerfile":    &bintree{templatesGcloudCloud_runDockerfile, map[string]*bintree{}},
				"Makefile":      &bintree{templatesGcloudCloud_runMakefile, map[string]*bintree{}},
				"README.md":     &bintree{templatesGcloudCloud_runReadmeMd, map[string]*bintree{}},
				"bin": &bintree{nil, map[string]*bintree{
					"_config.sh":      &bintree{templatesGcloudCloud_runBin_configSh, map[string]*bintree{}},
					"cleanup.sh":      &bintree{templatesGcloudCloud_runBinCleanupSh, map[string]*bintree{}},
					"launch.sh":       &bintree{templatesGcloudCloud_runBinLaunchSh, map[string]*bintree{}},
					"remove_pyenv.sh": &bintree{templatesGcloudCloud_runBinRemove_pyenvSh, map[string]*bintree{}},
					"setup_pyenv.sh":  &bintree{templatesGcloudCloud_runBinSetup_pyenvSh, map[string]*bintree{}},
				}},
				"main.py": &bintree{templatesGcloudCloud_runMainPy, map[string]*bintree{}},
				"model": &bintree{nil, map[string]*bintree{
					"__init__.py": &bintree{templatesGcloudCloud_runModel__init__Py, map[string]*bintree{}},
					"artifacts": &bintree{nil, map[string]*bintree{
						"README.md":   &bintree{templatesGcloudCloud_runModelArtifactsReadmeMd, map[string]*bintree{}},
						"__init__.py": &bintree{templatesGcloudCloud_runModelArtifacts__init__Py, map[string]*bintree{}},
						"files.py":    &bintree{templatesGcloudCloud_runModelArtifactsFilesPy, map[string]*bintree{}},
					}},
					"model.py": &bintree{templatesGcloudCloud_runModelModelPy, map[string]*bintree{}},
				}},
				"requirements-dev.txt": &bintree{templatesGcloudCloud_runRequirementsDevTxt, map[string]*bintree{}},
				"requirements.txt":     &bintree{templatesGcloudCloud_runRequirementsTxt, map[string]*bintree{}},
				"tests": &bintree{nil, map[string]*bintree{
					"__init__.py": &bintree{templatesGcloudCloud_runTests__init__Py, map[string]*bintree{}},
					"model": &bintree{nil, map[string]*bintree{
						"__init__.py": &bintree{templatesGcloudCloud_runTestsModel__init__Py, map[string]*bintree{}},
						"artifacts": &bintree{nil, map[string]*bintree{
							"__init__.py":   &bintree{templatesGcloudCloud_runTestsModelArtifacts__init__Py, map[string]*bintree{}},
							"test_files.py": &bintree{templatesGcloudCloud_runTestsModelArtifactsTest_filesPy, map[string]*bintree{}},
						}},
						"test_model.py": &bintree{templatesGcloudCloud_runTestsModelTest_modelPy, map[string]*bintree{}},
					}},
				}},
			}},
		}},
		"helpers.go": &bintree{templatesHelpersGo, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
